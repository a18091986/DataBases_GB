##############################################################################################################
Практическое задание по теме «Операторы, фильтрация, сортировка и ограничение»
##############################################################################################################

1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

mysql> update users SET created_at=now(), updated_at = now();


2. Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.


-- эти столбцы итак уже имеют нужное представление....но если бы это было не так, то:

mysql> ALTER TABLE users CHANGE created_at created_at DATETIME;
mysql> ALTER TABLE users CHANGE updated_at updated_at DATETIME;


3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех записей.

-- эта таблица пуста.... добавил несколько позиций


mysql> insert into storehouses_products (id, storehouse_id, product_id, value) values (1,1,1,16),(2,2,2,0),(3,3,3,35),(4,4,4,16),(5,5,5,0);

mysql> select * from storehouses_products;
+----+---------------+------------+-------+---------------------+---------------------+
| id | storehouse_id | product_id | value | created_at          | updated_at          |
+----+---------------+------------+-------+---------------------+---------------------+
|  1 |             1 |          1 |    16 | 2021-05-30 08:26:48 | 2021-05-30 08:26:48 |
|  2 |             2 |          2 |     0 | 2021-05-30 08:26:48 | 2021-05-30 08:26:48 |
|  3 |             3 |          3 |    35 | 2021-05-30 08:26:48 | 2021-05-30 08:26:48 |
|  4 |             4 |          4 |    16 | 2021-05-30 08:26:48 | 2021-05-30 08:26:48 |
|  5 |             5 |          5 |     0 | 2021-05-30 08:26:48 | 2021-05-30 08:26:48 |
+----+---------------+------------+-------+---------------------+---------------------+
5 rows in set (0.00 sec)


mysql> select id, value from storehouses_products order by case when value = 0 then 1 else 0 end, value;
+----+-------+
| id | value |
+----+-------+
|  1 |    16 |
|  4 |    16 |
|  3 |    35 |
|  2 |     0 |
|  5 |     0 |
+----+-------+

4. (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. Месяцы заданы в виде списка английских названий (may, august)

mysql> select name, birthday_at, case
    -> when date_format(birthday_at, '%m') = 05 then 'may'
    -> when date_format(birthday_at, '%m') = 08 then 'august'
    -> end as month
    -> from users where date_format(birthday_at, '%m') = 05 or date_format(birthday_at, '%m') = 08;
+--------------------+-------------+--------+
| name               | birthday_at | month  |
+--------------------+-------------+--------+
| Александр          | 1985-05-20  | may    |
| Мария              | 1992-08-29  | august |
+--------------------+-------------+--------+
2 rows in set (0.00 sec)


5. (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN.


mysql> select * from catalogs where id in (5,1,2)
    -> order by case
    -> when id > 4 then 0
    -> when id < 4 then 1
    -> end;
+----+-------------------------------------+
| id | name                                |
+----+-------------------------------------+
|  5 | Оперативная память                  |
|  1 | Процессоры                          |
|  2 | Материнские платы                   |
+----+-------------------------------------+
3 rows in set (0.00 sec)

##############################################################################################################

Практическое задание теме «Агрегация данных»

##############################################################################################################

1. Подсчитайте средний возраст пользователей в таблице users.

mysql> select round(avg((to_days(now()) - to_days(birthday_at)) / 365.25), 0) as 'средний возраст' from users;


2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.

mysql> select 
    dayname(concat(year(now()), '-', substring(birthday_at, 6,10))) as 'в этом году ДР в день недели', 
    count(dayname(concat(year(now()), '-', substring(birthday_at, 6, 10)))) as 'количество ДР'
from users group by 'в этом году ДР в день недели';


3. (по желанию) Подсчитайте произведение чисел в столбце таблицы.

mysql> select round(exp(sum(log(value))), 0) as fact from num;



